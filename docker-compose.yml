services:
  #################
  # GitLab Server
  #################
  gitlab:
    image: gitlab/gitlab-ce:latest
    # restart: always
    # hostname: bug-free-funicular-wrrpp559rj9fgq59-8080.app.github.dev
    container_name: gitlab
    ports:
      # - "2224:22"
      - "8080:443"
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'https://expert-enigma-q77jj4499r929v9r-8080.app.github.dev/'
        gitlab_rails['gitlab_shell_ssh_port'] = 2224
        gitlab_rails['initial_root_password'] = '123123123@Asd'
    volumes:
      - /mnt/local/gitlab/config:/etc/gitlab
      - /mnt/local/gitlab/logs:/var/log/gitlab
      - /mnt/local/gitlab/data:/var/opt/gitlab

  #################
  # Portainer
  #################
  portainer:
    image: portainer/portainer-ce
    restart: always
    container_name: portainer
    ports:
      - "8082:9443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /mnt/nfs/portainer/data:/data
  #################
  # Gitlab-runner
  #################
  gitlab-runner:
    image: gitlab/gitlab-runner
    restart: always
    container_name: gitlab-runner
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /mnt/local/gitlab-runner/config:/etc/gitlab-runner
  #################
  # Nginx Reverse Proxy
  #################
  # nginx-proxy:
  #   image: nginx:alpine
  #   container_name: nginx-proxy
  #   restart: always
  #   ports:
  #     - "80:80"
  #     # - "443:443"  # Enable if using SSL
  #   volumes:
  #     - /mnt/nfs/nginx/conf.d:/etc/nginx/conf.d
  #     - /mnt/nfs/certs:/etc/nginx/certs:ro  # optional SSL
  #   depends_on:
  #     - gitlab
  #     - nginx-harbor
  #     - portainer

  #################
  # Sonarqube
  #################
  sonarqube:
    image: sonarqube:community
    hostname: sonarqube
    container_name: sonarqube
    read_only: true
    depends_on:
      sonar-db:
        condition: service_healthy
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://sonar-db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - /mnt/local/sonar/sonarqube_data:/opt/sonarqube/data
      - /mnt/nfs/sonar/sonarqube_extensions:/opt/sonarqube/extensions
      - /mnt/nfs/sonar/sonarqube_logs:/opt/sonarqube/logs
      - /mnt/nfs/sonar/sonarqube_temp:/opt/sonarqube/temp
    ports:
      - "8081:9000"
    networks:
      - ghp
  sonar-db:
    image: postgres:17
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    hostname: sonar-db
    container_name: sonar-db
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar
    volumes:
      - /mnt/local/sonar/postgresql:/var/lib/postgresql
      - /mnt/local/sonar/postgresql_data:/var/lib/postgresql/data
    networks:
      - ghp

networks:
  ghp:
    name: ghp
    driver: bridge