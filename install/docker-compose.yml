services:
  #################
  # GitLab Server
  #################
  gitlab:
    image: gitlab/gitlab-ce:latest
    restart: always
    hostname: gitlab.test.id
    container_name: gitlab
    ports:
      # - "2224:22"
      - "8080:443"
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'https://gitlab.test.id/'
        # gitlab_rails['gitlab_shell_ssh_port'] = 2224
        gitlab_rails['initial_root_password'] = '123123123@Asd'
    volumes:
      - /mnt/local/gitlab/config:/etc/gitlab
      - /mnt/local/gitlab/logs:/var/log/gitlab
      - /mnt/local/gitlab/data:/var/opt/gitlab

  #################
  # Portainer
  #################
  portainer:
    image: portainer/portainer-ce
    restart: always
    container_name: portainer
    ports:
      - "8081:9443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /mnt/local/portainer/data:/data

  #################
  # Sonarqube
  #################
  sonarqube:
    image: sonarqube:community
    hostname: sonarqube
    container_name: sonarqube
    read_only: true
    depends_on:
      sonar-db:
        condition: service_healthy
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://sonar-db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - /mnt/local/sonar/sonarqube_data:/opt/sonarqube/data
      - /mnt/local/sonar/sonarqube_extensions:/opt/sonarqube/extensions
      - /mnt/local/sonar/sonarqube_logs:/opt/sonarqube/logs
      - /mnt/local/sonar/sonarqube_temp:/opt/sonarqube/temp
    ports:
      - "8082:9000"
    networks:
      - ghp
  sonar-db:
    image: postgres:17
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $ -U $" ]
      interval: 10s
      timeout: 5s
      retries: 5
    hostname: sonar-db
    container_name: sonar-db
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar
    volumes:
      - /mnt/local/sonar/postgresql:/var/lib/postgresql
      - /mnt/local/sonar/postgresql_data:/var/lib/postgresql/data
    networks:
      - ghp


  #################
  # Nginx Reverse Proxy
  #################
  # nginx-proxy:
  #   image: nginx:alpine
  #   container_name: nginx-proxy
  #   restart: always
  #   ports:
  #     - "80:80"
  #     # - "443:443"  # Enable if using SSL
  #   volumes:
  #     - /mnt/local/nginx/conf.d:/etc/nginx/conf.d
  #     - /mnt/local/certs:/etc/nginx/certs:ro  # optional SSL
  #   depends_on:
  #     - gitlab
  #     - nginx-harbor
  #     - portainer

  #################
  # Harbor
  #################
  log:
    image: goharbor/harbor-log:v2.13.1
    container_name: harbor-log
    restart: always
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - DAC_OVERRIDE
      - SETGID
      - SETUID
    volumes:
      - /var/log/harbor/:/var/log/docker/:z
      - type: bind
        source: /mnt/local/harbor_config/common/config/log/logrotate.conf
        target: /etc/logrotate.d/logrotate.conf
      - type: bind
        source: /mnt/local/harbor_config/common/config/log/rsyslog_docker.conf
        target: /etc/rsyslog.d/rsyslog_docker.conf
    ports:
      - 127.0.0.1:1514:10514
    networks:
      - ghp
  registry:
    image: goharbor/registry-photon:v2.13.1
    container_name: registry
    restart: always
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    volumes:
      - /mnt/local/harbor/registry:/storage:z
      - /mnt/local/harbor_config/common/config/registry/:/etc/registry/:z
      - type: bind
        source: /mnt/local/harbor/secret/registry/root.crt
        target: /etc/registry/root.crt
      - type: bind
        source: /mnt/local/harbor_config/common/config/shared/trust-certificates
        target: /harbor_cust_cert
    networks:
      - ghp
    depends_on:
      - log
    logging:
      driver: "syslog"
      options:
        syslog-address: "tcp://localhost:1514"
        tag: "registry"
  registryctl:
    image: goharbor/harbor-registryctl:v2.13.1
    container_name: registryctl
    env_file:
      - /mnt/local/harbor_config/common/config/registryctl/env
    restart: always
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    volumes:
      - /mnt/local/harbor/registry:/storage:z
      - /mnt/local/harbor_config/common/config/registry/:/etc/registry/:z
      - type: bind
        source: /mnt/local/harbor_config/common/config/registryctl/config.yml
        target: /etc/registryctl/config.yml
      - type: bind
        source: /mnt/local/harbor_config/common/config/shared/trust-certificates
        target: /harbor_cust_cert
    networks:
      - ghp
    depends_on:
      - log
    logging:
      driver: "syslog"
      options:
        syslog-address: "tcp://localhost:1514"
        tag: "registryctl"
  postgresql:
    image: goharbor/harbor-db:v2.13.1
    container_name: harbor-db
    restart: always
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - DAC_OVERRIDE
      - SETGID
      - SETUID
    volumes:
      - /mnt/local/harbor/database:/var/lib/postgresql/data:z
    networks:
      ghp:
    env_file:
      - /mnt/local/harbor_config/common/config/db/env
    depends_on:
      - log
    logging:
      driver: "syslog"
      options:
        syslog-address: "tcp://localhost:1514"
        tag: "postgresql"
    shm_size: '1gb'
  core:
    image: goharbor/harbor-core:v2.13.1
    container_name: harbor-core
    env_file:
      - /mnt/local/harbor_config/common/config/core/env
    restart: always
    cap_drop:
      - ALL
    cap_add:
      - SETGID
      - SETUID
    volumes:
      - /mnt/local/harbor/ca_download/:/etc/core/ca/:z
      - /mnt/local/harbor/:/data/:z
      - /mnt/local/harbor_config/common/config/core/certificates/:/etc/core/certificates/:z
      - type: bind
        source: /mnt/local/harbor_config/common/config/core/app.conf
        target: /etc/core/app.conf
      - type: bind
        source: /mnt/local/harbor/secret/core/private_key.pem
        target: /etc/core/private_key.pem
      - type: bind
        source: /mnt/local/harbor/secret/keys/secretkey
        target: /etc/core/key
      - type: bind
        source: /mnt/local/harbor_config/common/config/shared/trust-certificates
        target: /harbor_cust_cert
    networks:
      ghp:
    depends_on:
      - log
      - registry
      - redis
      - postgresql
    logging:
      driver: "syslog"
      options:
        syslog-address: "tcp://localhost:1514"
        tag: "core"
  portal:
    image: goharbor/harbor-portal:v2.13.1
    container_name: harbor-portal
    restart: always
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
      - NET_BIND_SERVICE
    volumes:
      - type: bind
        source: /mnt/local/harbor_config/common/config/portal/nginx.conf
        target: /etc/nginx/nginx.conf
    networks:
      - ghp
    depends_on:
      - log
    logging:
      driver: "syslog"
      options:
        syslog-address: "tcp://localhost:1514"
        tag: "portal"

  jobservice:
    image: goharbor/harbor-jobservice:v2.13.1
    container_name: harbor-jobservice
    env_file:
      - /mnt/local/harbor_config/common/config/jobservice/env
    restart: always
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    volumes:
      - /mnt/local/harbor/job_logs:/var/log/jobs:z
      - type: bind
        source: /mnt/local/harbor_config/common/config/jobservice/config.yml
        target: /etc/jobservice/config.yml
      - type: bind
        source: /mnt/local/harbor_config/common/config/shared/trust-certificates
        target: /harbor_cust_cert
    networks:
      - ghp
    depends_on:
      - core
    logging:
      driver: "syslog"
      options:
        syslog-address: "tcp://localhost:1514"
        tag: "jobservice"
  redis:
    image: goharbor/redis-photon:v2.13.1
    container_name: redis
    restart: always
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    volumes:
      - /mnt/local/harbor/redis:/var/lib/redis
    networks:
      ghp:
    depends_on:
      - log
    logging:
      driver: "syslog"
      options:
        syslog-address: "tcp://localhost:1514"
        tag: "redis"
  proxy:
    image: goharbor/nginx-photon:v2.13.1
    container_name: nginx
    restart: always
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
      - NET_BIND_SERVICE
    volumes:
      - /mnt/local/harbor_config/common/config/nginx:/etc/nginx:z
      - type: bind
        source: /mnt/local/harbor_config/common/config/shared/trust-certificates
        target: /harbor_cust_cert
    networks:
      - ghp
    ports:
      - 8083:8080
    depends_on:
      - registry
      - core
      - portal
      - log
    logging:
      driver: "syslog"
      options:
        syslog-address: "tcp://localhost:1514"
        tag: "proxy"
  trivy-adapter:
    container_name: trivy-adapter
    image: goharbor/trivy-adapter-photon:v2.13.1
    restart: always
    cap_drop:
      - ALL
    depends_on:
      - log
      - redis
    networks:
      - ghp
    volumes:
      - type: bind
        source: /mnt/local/harbor/trivy-adapter/trivy
        target: /home/scanner/.cache/trivy
      - type: bind
        source: /mnt/local/harbor/trivy-adapter/reports
        target: /home/scanner/.cache/reports
      - type: bind
        source: /mnt/local/harbor_config/common/config/shared/trust-certificates
        target: /harbor_cust_cert
    logging:
      driver: "syslog"
      options:
        syslog-address: "tcp://localhost:1514"
        tag: "trivy-adapter"
    env_file:
      /mnt/local/harbor_config/common/config/trivy-adapter/env
      
networks:
  ghp:
    name: ghp
    driver: bridge
    ipam:
      config:
        - subnet: 10.46.93.0/24